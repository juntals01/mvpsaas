services:
  postgres:
    image: postgres:15-alpine
    container_name: mvpsaas-postgres
    restart: ${RESTART_POLICY}
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: mvpsaas-redis
    restart: ${RESTART_POLICY}
    ports:
      - '${REDIS_PORT}:6379'

  minio:
    image: minio/minio
    container_name: mvpsaas-minio
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    ports:
      - '${MINIO_API_PORT}:9000'
      - '${MINIO_CONSOLE_PORT}:9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    restart: unless-stopped

  minio-init:
    image: alpine:3.19
    container_name: mvpsaas-minio-init
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        echo '‚è≥ Installing curl and bash...'; \
        apk add --no-cache curl bash && \

        echo '‚è≥ Waiting for MinIO to be ready...'; \
        until curl -s http://minio:${MINIO_API_PORT}/minio/health/ready > /dev/null; do sleep 1; done; \

        echo '‚úÖ MinIO is ready. Downloading mc client...'; \
        curl -s https://dl.min.io/client/mc/release/linux-amd64/mc -o /usr/bin/mc && \
        chmod +x /usr/bin/mc && \

        echo 'üîó Setting mc alias...'; \
        mc alias set local http://minio:${MINIO_API_PORT} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} && \

        echo 'üë§ Creating user if not exists...'; \
        mc admin user add local ${MINIO_USER} ${MINIO_PASSWORD} || true && \

        echo 'üîê Attaching readwrite policy...'; \
        mc admin policy attach local readwrite --user=${MINIO_USER} || true && \

        echo 'ü™£ Creating bucket if not exists...'; \
        if ! mc ls local/${MINIO_BUCKET} > /dev/null 2>&1; then \
          mc mb -p local/${MINIO_BUCKET} && \
          echo '‚úÖ Bucket created.'; \
        else \
          echo '‚ÑπÔ∏è Bucket already exists.'; \
        fi && \

        echo 'üåç Setting public read access for the bucket...'; \
        mc anonymous set download local/${MINIO_BUCKET} && \
        echo '‚úÖ Public access enabled.';
      "

    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_USER: ${MINIO_USER}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET}
      MINIO_API_PORT: ${MINIO_API_PORT}
    restart: 'no'

volumes:
  pgdata:
  minio_data:
